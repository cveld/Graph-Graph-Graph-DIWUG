@model EventManagerDemo.Models.ManagedEvent

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/OfficeUIFabricLayout.cshtml";
}

<div class="event-page create">
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Event</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group ms-TextField">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 ms-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control ms-TextField-field" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ms-TextField">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 ms-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control ms-TextField-field" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ms-TextField">
                @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2 ms-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control ms-TextField-field" } })
                    @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ms-TextField">
                @Html.LabelFor(model => model.EventManager, htmlAttributes: new { @class = "control-label col-md-2 ms-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventManager, new { htmlAttributes = new { @class = "form-control ms-TextField-field" } })
                    @Html.ValidationMessageFor(model => model.EventManager, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ms-TextField">
                @Html.LabelFor(model => model.Confidentiality, htmlAttributes: new { @class = "control-label col-md-2 ms-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Confidentiality, new { htmlAttributes = new { @class = "form-control ms-TextField-field" } })
                    @Html.ValidationMessageFor(model => model.Confidentiality, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ms-TextField">
               @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2 ms-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EventType, (IEnumerable<SelectListItem>)ViewBag.EventTypes, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.EditorFor(model => model.EventType, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default ms-Button-label" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>